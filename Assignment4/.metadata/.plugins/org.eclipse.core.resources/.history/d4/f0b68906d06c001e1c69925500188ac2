//package com.app.fruits;
//
//import java.util.Scanner;
//
//public class tester {
//
//	public static void main(String[] args) {
//		int choice = 0;
//		int counter = 0;
//		Fruit[] basket = new Fruit[10];
//
//		do {
//			System.out.println("*********Menu*********");
//			System.out.println("0.Exit.");
//			System.out.println("1.Add Mango.");
//			System.out.println("2.Add Orange.");
//			System.out.println("3.Add Apple.");
//			System.out.println("4.Display names of all fruits in the basket.");
//			System.out.println("5.Display name,color,weight,taste of all fresh fruits, in the basket.");
//			System.out.println("6.Display tastes of all stale(not fresh) fruits in the basket.");
//			System.out.println("7.Mark a fruit as stale");
//			System.out.println("8.Mark all sour fruits stale(optional).");
//			Scanner sc = new Scanner(System.in);
//			System.out.println("Enter your choice.");
//			choice = sc.nextInt();
//
//			switch (choice) 
//			{
//			case 0:
//				System.out.println("Exiting Program.");
//				return;
//
//			case 1:
//				System.out.print("Enter Mango name: ");
//				sc.nextLine(); // Consume the newline
//				String mangoName = sc.nextLine();
//				System.out.print("Enter Mango color: ");
//				String mangoColor = sc.nextLine();
//				System.out.print("Enter Mango weight: ");
//				double mangoWeight = sc.nextDouble();
//				basket[counter++] = new Mango(mangoName, mangoWeight, mangoColor);
//				break;
//
//			case 2:
//				System.out.print("Enter Orange name: ");
//				sc.nextLine(); // Consume the newline
//				String orangeName = sc.nextLine();
//				System.out.print("Enter Orange color: ");
//				String orangeColor = sc.nextLine();
//				System.out.print("Enter Orange weight: ");
//				double orangeWeight = sc.nextDouble();
//				basket[counter++] = new Orange(orangeName, orangeWeight, orangeColor);
//				break;
//
//			case 3:
//				System.out.print("Enter Apple name: ");
//				sc.nextLine(); // Consume the newline
//				String appleName = sc.nextLine();
//				System.out.print("Enter Apple color: ");
//				String appleColor = sc.nextLine();
//				System.out.print("Enter Apple weight: ");
//				double appleWeight = sc.nextDouble();
//				basket[counter++] = new Apple(appleName, appleWeight, appleColor);
//				break;
//
//			case 4:
//				System.out.println("Fruits in the basket:");
//				for (int i = 0; i < counter; i++) 
//				{
//					System.out.println(basket[i].getName());
//				}
//				break;
//
//			case 5:
//				System.out.println("Details of fresh fruits:");
//				for (int i = 0; i < counter; i++) 
//				{
//					if (basket[i].isFresh()) 
//					{
//						System.out.println(basket[i].toString() + ", Taste: " + basket[i].taste());
//					}
//				}
//				break;
//
//			case 6:
//				System.out.println("Tastes of stale fruits:");
//				for (int i = 0; i < counter; i++) 
//				{
//					if (!basket[i].isFresh()) 
//					{
//						System.out.println(basket[i].taste());
//					}
//				}
//				break;
//
//			case 7:
//				System.out.print("Enter the index of the fruit to mark as stale: ");
//				int index = sc.nextInt();
//				if (index >= 0 && index < counter) {
//					basket[index].setIsFresh(false);
//					System.out.println("Fruit marked as stale.");
//				} else {
//					System.out.println("Invalid index. Please retry.");
//				}
//				break;
//
//			case 8:
//				System.out.println("Marking all sour fruits as stale...");
//				for (int i = 0; i < counter; i++) {
//					if (basket[i].taste().equalsIgnoreCase("Sour")) {
//						basket[i].setIsFresh(false);
//					}
//				}
//				break;
//
//			default:
//				System.out.println("Invalid choice. Please retry again.");
//				break;
//			} 
//		} while (choice !=0);
//	}
//}

package com.app.fruits;

import java.util.Scanner;

class Fruit {
    private String name;
    private String color;
    private double weight;
    private boolean isFresh;

    public Fruit(String name, String color, double weight) {
        this.name = name;
        this.color = color;
        this.weight = weight;
        this.isFresh = true;
    }

    public String getName() {
        return name;
    }

    public boolean isFresh() {
        return isFresh;
    }

    public void setStale() {
        isFresh = false;
    }

    @Override
    public String toString() {
        return "Name: " + name + ", Color: " + color + ", Weight: " + weight;
    }

    public String taste() {
        return "No specific taste";
    }
}

class Apple extends Fruit {
    public Apple(String name, double weight, String color) {
        super(name, color, weight);
    }

    @Override
    public String taste() {
        return "Sweet and sour";
    }
}

class Orange extends Fruit {
    public Orange(String name, double weight, String color) {
        super(name, color, weight);
    }

    @Override
    public String taste() {
        return "Sour";
    }
}

class Mango extends Fruit {
    public Mango(String name, double weight, String color) {
        super(name, color, weight);
    }

    @Override
    public String taste() {
        return "Sweet";
    }
}

public class FruitBasket {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int basketSize;
        System.out.print("Enter the size of the basket: ");
        basketSize = scanner.nextInt();

        Fruit[] basket = new Fruit[basketSize];
        int counter = 0;

        while (true) {
            System.out.println("\nOptions:");
            System.out.println("0. Exit");
            System.out.println("1. Add Mango");
            System.out.println("2. Add Orange");
            System.out.println("3. Add Apple");
            System.out.println("4. Display names of all fruits in the basket");
            System.out.println("5. Display name, color, weight, and taste of all fresh fruits in the basket");
            System.out.println("6. Display tastes of all stale fruits in the basket");
            System.out.println("7. Mark a fruit as stale (by index)");
            System.out.println("8. Mark all sour fruits as stale (optional)");

            int choice = scanner.nextInt();

            if (choice == 0) {
                break;
            }

            if (counter == basketSize) {
                System.out.println("Basket is full.");
                continue;
            }

            String name, color;
            double weight;

            System.out.print("Enter name: ");
            name = scanner.next();
            System.out.print("Enter color: ");
            color = scanner.next();
            System.out.print("Enter weight: ");
            weight = scanner.nextDouble();

            switch (choice) {
                case 1:
                    basket[counter] = new Mango(name, weight, color);
                    break;
                case 2:
                    basket[counter] = new Orange(name, weight, color);
                    break;
                case 3:
                    basket[counter] = new Apple(name, weight, color);
                    break;
                    
                    
                    
                    
                case 7:
                    System.out.print("Enter the index to mark as stale: ");
                    int index = scanner.nextInt();
                    if (index >= 0 && index < counter) {
                        basket[index].setStale();
                        System.out.println("Fruit marked as stale.");
                    } else {
                        System.out.println("Invalid index.");
                    }
                    break;
                case 8:
                    for (int i = 0; i < counter; i++) {
                        if (basket[i].taste().equals("Sour")) {
                            basket[i].setStale();
                        }
                    }
                    System.out.println("All sour fruits marked as stale.");
                    break;
                default:
                    System.out.println("Invalid choice.");
                    break;
            }
            counter++;
        }

        System.out.println("\nNames of all fruits in the basket:");
        for (int i = 0; i < counter; i++) {
            System.out.println(basket[i].getName());
        }

        System.out.println("\nName, color, weight, and taste of all fresh fruits:");
        for (int i = 0; i < counter; i++) {
            if (basket[i].isFresh()) {
                System.out.println(basket[i].toString() + ", Taste: " + basket[i].taste());
            }
        }

       
    }
}

